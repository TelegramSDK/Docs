"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,f=p["".concat(i,".").concat(g)]||p[g]||d[g]||s;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=g;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8501:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:3},o="Translating",l={unversionedId:"usage/translating",id:"usage/translating",title:"Translating",description:"This library provides a class to translate texts from a given object.",source:"@site/docs/usage/translating.md",sourceDirName:"usage",slug:"/usage/translating",permalink:"/docs/usage/translating",draft:!1,editUrl:"https://github.com/TelegramSDK/Docs/tree/main/docs/usage/translating.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Updates",permalink:"/docs/usage/updates"},next:{title:"Security",permalink:"/docs/usage/security"}},i={},c=[{value:"How to use",id:"how-to-use",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"translating"},"Translating"),(0,a.kt)("p",null,"This library provides a class to translate texts from a given object."),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("p",null,"Assuming you have a file called ",(0,a.kt)("inlineCode",{parentName:"p"},"locales/en.json"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "start":{\n        "text": "<b>Hi {{MENTION}}!</b>",\n        "keyboard": {\n            "inline_keyboard": [\n                [{\n                    "text": "Awesome Library",\n                    "url": "https://github.com/TelegramSDK/BotAPI"\n                }]\n            ]\n        }\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},'<?php\nuse TelegramSDK\\Utils\\Translator;\n\n$user = $updates->message->from;\n\n$user_language = $user->language_code ?? "en";\n\nif(file_exists("locales/$user_language.json")){\n    $file_texts = json_decode(file_get_contents("locales/$user_language.json"));\n} else{\n    $file_texts = json_decode(file_get_contents("locales/en.json"));\n}\n\n$translator = new Translator($file_texts, [\n    "{{MENTION}}" => "<a href=\'tg://user?id=$user->id\'>$user->first_name</a>"\n]);\n\n$bot->sendMessage([\n    "chat_id" => $user->id,\n    "text" => $translator->start->text,\n    "reply_markup" => json_encode($translator->texts->start->keyboard), // Calling $translator->texts doesn\'t translate the string and doesn\'t return a new instance of Translator\n    "parse_mode" => "HTML"\n]);\n\n')))}d.isMDXComponent=!0}}]);